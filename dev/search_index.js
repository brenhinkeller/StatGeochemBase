var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = StatGeochemBase","category":"page"},{"location":"#StatGeochemBase","page":"Home","title":"StatGeochemBase","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for StatGeochemBase.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [StatGeochemBase]","category":"page"},{"location":"#StatGeochemBase.cntr-Tuple{AbstractArray}","page":"Home","title":"StatGeochemBase.cntr","text":"cntr(edges::AbstractArray)\n\nGiven an array of bin edges, return a corresponding vector of bin centers\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.count_unique!-Tuple{Any}","page":"Home","title":"StatGeochemBase.count_unique!","text":"n = count_unique!(A)\n\nSort the array A in-place (if not already sorted), move unique elements to the front, and return the number of unique elements found.\n\nA[1:count_unique!(A)] should return an array equivalent to unique(A)\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.draw_from_distribution!-Tuple{Array{var\"#s12\", N} where {var\"#s12\"<:AbstractFloat, N}, AbstractArray{var\"#s13\", N} where {var\"#s13\"<:AbstractFloat, N}}","page":"Home","title":"StatGeochemBase.draw_from_distribution!","text":"draw_from_distribution!(dist::AbstractArray{<:AbstractFloat}, x::Array{<:AbstractFloat})\n\nFill an existing variable x with random floating point numbers drawn from a continuous probability distribution specified by a vector dist defining the PDF curve thereof.\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.draw_from_distribution-Tuple{AbstractArray{var\"#s2\", N} where {var\"#s2\"<:AbstractFloat, N}, Integer}","page":"Home","title":"StatGeochemBase.draw_from_distribution","text":"x = draw_from_distribution(dist::AbstractArray{<:AbstractFloat}, n::Integer)\n\nDraw n random floating point numbers from a continuous probability distribution specified by a vector dist defining the PDF curve thereof.\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.findclosest-Tuple{Any, Any}","page":"Home","title":"StatGeochemBase.findclosest","text":"findclosest(source, target)\n\nReturn the index of the numerically closest value in the indexable collection target for each value in source. If muliple values are equally close, the first one is used\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.findclosestabove-Tuple{Any, Any}","page":"Home","title":"StatGeochemBase.findclosestabove","text":"findclosestabove(source, target)\n\nReturn the index of the nearest value of the indexable collection target that is greater than (i.e., \"above\") each value in source. If no such values exist in target, returns an index of 0.\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.findclosestbelow-Tuple{Any, Any}","page":"Home","title":"StatGeochemBase.findclosestbelow","text":"findclosestbelow(source, target)\n\nReturn the index of the nearest value of the indexable collection target that is less than (i.e., \"below\") each value in source. If no such target values exist in target, returns an index of 0.\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.findmatches-Tuple{Any, Any}","page":"Home","title":"StatGeochemBase.findmatches","text":"findmatches(source, target)\n\nReturn the index of the first value in target (if any) that is equal to a given value in source for each value in source; else 0.\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.findnth-Tuple{AbstractArray{Bool, N} where N, Integer}","page":"Home","title":"StatGeochemBase.findnth","text":"findnth(t::AbstractArray{Bool}, n::Integer)\n\nReturn the index of the nth true value of t, else length(t)\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.midpointquadrature-Tuple{AbstractRange, AbstractArray}","page":"Home","title":"StatGeochemBase.midpointquadrature","text":"midpointquadrature(bincenters, values)\n\nAdd up the area under a curve with y positions specified by a vector of values and x positions specfied by a vector of bincenters using midpoint integration.\n\n\n\n\n\n","category":"method"},{"location":"#StatGeochemBase.trapezoidalquadrature-Tuple{AbstractRange, AbstractArray}","page":"Home","title":"StatGeochemBase.trapezoidalquadrature","text":"trapezoidalquadrature(edges, values)\n\nAdd up the area under a curve with y positions specified by a vector of values and x positions specfied by a vector of edges using trapezoidal integration. Bins need not be evenly spaced, though it helps (integration will be faster if edges are specified as an AbstractRange).\n\n\n\n\n\n","category":"method"}]
}
